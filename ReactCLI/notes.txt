Створення проєкту
- обираємо директорію, що не містить не-url символів у назві (без пробілів, спецсимволів &#, кирилиці)
- включаємо термінал та переходимо до неї
- сторюємо новий проєкт командою
   npx create-react-app booking
   (тут booking - назва проєкту) 
- пробний запуск:
   = перейти до директорії проєкту
      cd booking
   = запустити
      npm start
! основні проблеми - у шляху директорії є спецсимволи

Налаштування роутера (за зразком https://www.w3schools.com/react/react_router.asp)
 - встановлюємо пакет
    npm i -D react-router-dom
 - створюємо компоненти - окремі файли для сторінок
    = Layout.js
    = Admin.js
    = Home.js
    = Category.js
------------
Path params / Slug - параметри маршрутів
Для того щоб реалізувати передачу параметрів через маршрут ми задаємо 
його шлях з включенням іменованих даних з ":"
<Route path="category/:slug" element={<Category />} />
                        |
                  буде передано до компонента Category у якому його вилучаємо хуком useParams
                     import { useParams } from 'react-router';
                     function Category() {
                     const { slug } = useParams();

Пряма адресація (один адрес - один елемент)
/admin -> <Admin />
/adminUser -> <AdminUser />
/adminContent -> <AdminContent />

Рівнева (ієрархічна) адресація - багато адрес - один елемент
/admin/ -> <Admin param="" />
/admin/user -> <Admin param="User" />
/admin/content -> <Admin param="Content" />

Параметризована адресація (необмежена кількість адрес - один елемент)
/admin/будь-що -> <Admin param="будь-що" />
-------------------------------------------------
FLUX
-------------------------------------------------
Flux - архітектура проєкту, згідно з якою відокремлюється
шар, що відповідає за роботу з даними. Можна провести аналогію
з ASP: DAL, DataAccessor - перенесення задач роботи з даними 
до окремого модулю
Історично у React flux-архітектура реалізовувалась додатковими
бібліотеками (Redux, Reflux, ...), на сьогодні ці засоби включено
до ядра React (хук useReducer)
